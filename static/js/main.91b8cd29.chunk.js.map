{"version":3,"sources":["serviceWorker.ts","Layout/ColumnSection.tsx","Layout/Navbar.tsx","Pages/EverythingElse/index.tsx","Pages/Errors/FourOhFour.tsx","Pages/Home/index.tsx","Pages/Me/index.tsx","Pages/Projects/Project.tsx","Pages/Projects/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ColumnSection","children","className","style","height","Navbar","useState","toggle","setToggle","ActiveStyle","textDecoration","width","position","top","right","backgroundColor","light","expand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","tag","RouterLink","activeStyle","exact","to","scrollTo","firstStyle","color","nStyle","paddingLeft","EverythingElse","name","isDynamic","spy","smooth","duration","icon","size","href","FourOhFour","fourohfour_messages","Math","floor","random","length","Home","Me","Project","props","projectIndex","project","title","description","map","d","index","key","link","fontAwesomeIcon","lastIndex","Projects","projext_jsxs","_projects","projects","library","add","faAngleDown","faGithub","faTwitter","faInstagram","faLinkedin","App","basename","process","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91b8cd29.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\n\r\nexport interface ColumnSectionProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst ColumnSection = ({ children }: ColumnSectionProps) => (\r\n  <div\r\n    className=\"d-flex\"\r\n    style={{\r\n      height: '100vh'\r\n    }}\r\n  >\r\n    <div className=\"d-flex flex-fill flex-column justify-content-center align-items-center p-4\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default ColumnSection\r\n","import React, { CSSProperties, useState } from 'react'\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar as Bootbar,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink as BootLink\r\n} from 'reactstrap'\r\nimport { NavLink as RouterLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  const [toggle, setToggle] = useState(false)\r\n\r\n  let NavStyle: CSSProperties = {\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: '0px',\r\n    right: '0px',\r\n    backgroundColor: 'rgba(255,255,255,.9)'\r\n  }\r\n\r\n  let ActiveStyle = {\r\n    textDecoration: 'underline'\r\n  }\r\n\r\n  return (\r\n    <Bootbar style={NavStyle} light expand=\"md\" className=\"position-fixed\">\r\n      <NavbarToggler onClick={() => setToggle(!toggle)} />\r\n      <Collapse isOpen={toggle} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <BootLink\r\n              tag={RouterLink}\r\n              activeStyle={ActiveStyle}\r\n              exact\r\n              to=\"/\"\r\n              onClick={() => window.scrollTo(0, 0)}\r\n            >\r\n              Home\r\n            </BootLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <BootLink\r\n              tag={RouterLink}\r\n              activeStyle={ActiveStyle}\r\n              to=\"/me\"\r\n              onClick={() => window.scrollTo(0, 0)}\r\n            >\r\n              Me\r\n            </BootLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <BootLink\r\n              tag={RouterLink}\r\n              activeStyle={ActiveStyle}\r\n              to=\"/projects\"\r\n              onClick={() => window.scrollTo(0, 0)}\r\n            >\r\n              Projects\r\n            </BootLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <BootLink\r\n              tag={RouterLink}\r\n              activeStyle={ActiveStyle}\r\n              to=\"/everythingelse\"\r\n              onClick={() => window.scrollTo(0, 0)}\r\n            >\r\n              Everything Else\r\n            </BootLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Bootbar>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import ColumnSection from '../../Layout/ColumnSection'\r\nimport Navbar from '../../Layout/Navbar'\r\nimport React, { Fragment } from 'react'\r\nimport { Element, Link } from 'react-scroll'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst firstStyle = {\r\n  color: '#111',\r\n  '&:hover': {\r\n    color: '#456'\r\n  }\r\n}\r\n\r\nconst nStyle = {\r\n  ...firstStyle,\r\n  paddingLeft: '1rem'\r\n}\r\n\r\nconst EverythingElse = () => (\r\n  <Fragment>\r\n    <Navbar />\r\n    <Element name=\"section1\">\r\n      <ColumnSection>\r\n        <h1>Everything Else</h1>\r\n        <Link\r\n          to=\"section2\"\r\n          isDynamic={true}\r\n          spy={true}\r\n          smooth={true}\r\n          duration={500}\r\n        >\r\n          <FontAwesomeIcon icon=\"angle-down\" size=\"3x\" />\r\n        </Link>\r\n      </ColumnSection>\r\n    </Element>\r\n    <Element name=\"section2\">\r\n      <ColumnSection>\r\n        <p>\r\n          Honestly this is just a space to plug all of my social media links and\r\n          I didn't want to put it on my about me page.\r\n        </p>\r\n        <p>So here you go:</p>\r\n        <div className=\"d-flex flex-row\">\r\n          <a href=\"https://github.com/Kyle-Helmick\" style={firstStyle}>\r\n            <FontAwesomeIcon icon={['fab', 'github']} size=\"2x\" />\r\n          </a>\r\n          <a href=\"https://twitter.com/dude___what\" style={nStyle}>\r\n            <FontAwesomeIcon icon={['fab', 'twitter']} size=\"2x\" />\r\n          </a>\r\n          <a href=\"https://instagram.com/dude___what/\" style={nStyle}>\r\n            <FontAwesomeIcon icon={['fab', 'instagram']} size=\"2x\" />\r\n          </a>\r\n          <a href=\"https://www.linkedin.com/in/kyle-helmick/\" style={nStyle}>\r\n            <FontAwesomeIcon icon={['fab', 'linkedin']} size=\"2x\" />\r\n          </a>\r\n        </div>\r\n      </ColumnSection>\r\n    </Element>\r\n  </Fragment>\r\n)\r\n\r\nexport default EverythingElse\r\n","import ColumnSection from '../../Layout/ColumnSection'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FourOhFour = () => {\r\n  let fourohfour_messages = [\r\n    \"Uh oh, that's weird... \",\r\n    'Whoa. Where are we? ',\r\n    'The server room is probably on fire. ',\r\n    'Somewhere Kyle was just paged. He says thanks. ',\r\n    'You found the secret page! Just kidding. ',\r\n    'witty_joke_v4_final.jpeg '\r\n  ]\r\n\r\n  return (\r\n    <ColumnSection>\r\n      <h1>404</h1>\r\n      <h2>\r\n        {\r\n          fourohfour_messages[\r\n            Math.floor(Math.random() * fourohfour_messages.length)\r\n          ]\r\n        }\r\n      </h2>\r\n      <h2>\r\n        Let's get you back <Link to=\"/\">home</Link>.\r\n      </h2>\r\n    </ColumnSection>\r\n  )\r\n}\r\n\r\nexport default FourOhFour\r\n","import ColumnSection from '../../Layout/ColumnSection'\r\nimport Navbar from '../../Layout/Navbar'\r\nimport React, { Fragment } from 'react'\r\nimport { Element, Link } from 'react-scroll'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Element name=\"section1\">\r\n        <ColumnSection>\r\n          <h1>Hi. My name is Kyle.</h1>\r\n          <Link\r\n            to=\"section2\"\r\n            isDynamic={true}\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            <FontAwesomeIcon icon=\"angle-down\" size=\"3x\" />\r\n          </Link>\r\n        </ColumnSection>\r\n      </Element>\r\n      <Element name=\"section2\">\r\n        <ColumnSection>\r\n          <div>\r\n            <h3>This is my site</h3>\r\n            <p>\r\n              Usually I don't know what to put here, or really anywhere when it\r\n              comes to writing but I mean, here it is.\r\n            </p>\r\n          </div>\r\n        </ColumnSection>\r\n      </Element>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import ColumnSection from '../../Layout/ColumnSection'\r\nimport Navbar from '../../Layout/Navbar'\r\nimport React, { Fragment } from 'react'\r\nimport { Element, Link } from 'react-scroll'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Me = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Element name=\"section1\">\r\n        <ColumnSection>\r\n          <h1>It's all about me</h1>\r\n          <Link\r\n            to=\"section2\"\r\n            isDynamic={true}\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            <FontAwesomeIcon icon=\"angle-down\" size=\"3x\" />\r\n          </Link>\r\n        </ColumnSection>\r\n      </Element>\r\n      <Element name=\"section2\">\r\n        <ColumnSection>\r\n          <p>\r\n            Hey, it's me Kyle. I'm an Amazon dev by day, and a just regular dev\r\n            by night.\r\n          </p>\r\n          <p>\r\n            I graduated from the University of Colorado at Boulder with a\r\n            Bachelors of Science in Computer Science and a Minor in Mathematics.\r\n          </p>\r\n          <Link\r\n            to=\"section3\"\r\n            isDynamic={true}\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            <FontAwesomeIcon icon=\"angle-down\" size=\"2x\" />\r\n          </Link>\r\n        </ColumnSection>\r\n      </Element>\r\n      <Element name=\"section3\">\r\n        <ColumnSection>\r\n          <p>\r\n            Right now I'm interested in a couple things like mountain biking,\r\n            rock climbing, cooking, and hiking.\r\n          </p>\r\n          <p>\r\n            Ok now that this is sounding like a dating profile, (aren't you glad\r\n            I didn't say long walks on the beach) I'd recommend to go check out\r\n            other parts of this site.\r\n          </p>\r\n        </ColumnSection>\r\n      </Element>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Me\r\n","import ColumnSection from '../../Layout/ColumnSection'\nimport React from 'react'\nimport { Element, Link } from 'react-scroll'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport interface ProjectInterface {\n  title: string\n  description: Array<string>\n  link: string\n  fontAwesomeIcon: any // Because FontAwesome doesn't want a string for their IconName type that's just strings :(\n}\n\nexport interface ProjectProps {\n  project: ProjectInterface\n  projectIndex: number\n  lastIndex: boolean\n  key: string\n}\n\nconst Project = (props: ProjectProps) => (\n  <Element name={`project${props.projectIndex}`}>\n    <ColumnSection>\n      <h2>{props.project.title}</h2>\n      {props.project.description.map((d, index) => (\n        <p key={`${props.project.title}-desc-${index}`}>{d}</p>\n      ))}\n      <div>\n        {props.project.link !== '' ? (\n          <a href={props.project.link} style={{ color: '#111' }}>\n            <FontAwesomeIcon\n              icon={['fab', props.project.fontAwesomeIcon]}\n              size=\"2x\"\n            />\n          </a>\n        ) : null}\n\n        {!props.lastIndex ? (\n          <Link\n            to={`project${props.projectIndex + 1}`}\n            isDynamic={true}\n            spy={true}\n            smooth={true}\n            duration={500}\n            style={{ paddingLeft: '1rem' }}\n          >\n            <FontAwesomeIcon icon=\"angle-down\" size=\"2x\" />\n          </Link>\n        ) : null}\n      </div>\n    </ColumnSection>\n  </Element>\n)\n\nexport default Project\n","import ColumnSection from '../../Layout/ColumnSection'\r\nimport Navbar from '../../Layout/Navbar'\r\nimport React, { Fragment } from 'react'\r\nimport { Element, Link } from 'react-scroll'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport _projects from './projects.json'\r\nimport Project, { ProjectInterface } from './Project'\r\n\r\nconst Projects = () => {\r\n  const project_jsons: ProjectInterface[] = _projects\r\n\r\n  const projext_jsxs = project_jsons.map((project, index, projects) => {\r\n    const lastIndex = index === projects.length - 1\r\n    return (\r\n      <Project\r\n        project={project}\r\n        projectIndex={index}\r\n        lastIndex={lastIndex}\r\n        key={`project${index}`}\r\n      />\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Element name=\"projects\">\r\n        <ColumnSection>\r\n          <h1>Projects</h1>\r\n          <Link\r\n            to=\"project0\"\r\n            isDynamic={true}\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            <FontAwesomeIcon icon=\"angle-down\" size=\"3x\" />\r\n          </Link>\r\n        </ColumnSection>\r\n      </Element>\r\n      {projext_jsxs}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { EverythingElse, FourOhFour, Home, Me, Projects } from './Pages'\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons'\nimport {\n  faGithub,\n  faInstagram,\n  faLinkedin,\n  faTwitter\n} from '@fortawesome/free-brands-svg-icons/'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport './App.css'\n\nlibrary.add(faAngleDown, faGithub, faTwitter, faInstagram, faLinkedin)\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/me\" component={Me} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/everythingelse\" component={EverythingElse} />\n          <Route component={FourOhFour} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import * as serviceWorker from './serviceWorker'\nimport App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}